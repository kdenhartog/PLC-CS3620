(* auto-generated by gt *)

open Gra2srs_syntax;;

let cur_line = ref 1;;
let rec print_new_line (os:string->unit) (do_print:bool) (p:int) : unit =
	if(p > !cur_line && do_print) then ( 
		os "\n"; 
		incr cur_line;
		print_new_line os do_print p;
	)
;;

let rec dummy () = () 
and pp_terminal (os:string->unit) (to_pretty_print:bool) = function 
	(d,str1) -> print_new_line os to_pretty_print (fst d); os str1

and eq_args = function
   |Empty (d),Empty (d')-> true
   |Args (d , term1_1 , args_args_comma02_1),Args (d' , term1_2 , args_args_comma02_2)-> true && eq_term(term1_1 , term1_2) && eq_args_args_comma0(args_args_comma02_1 , args_args_comma02_2)
   | _ -> false


and eq_atom = function
   |Id (d , prim1_1 , post2_1),Id (d' , prim1_2 , post2_2)-> true && eq_prim(prim1_1 , prim1_2) && eq_post(post2_1 , post2_2)
   |Charset (d , charset_atom_tilde11_1 , pd2_1 , charset_atom_charset_prim23_1 , pd4_1 , post5_1),Charset (d' , charset_atom_tilde11_2 , pd2_2 , charset_atom_charset_prim23_2 , pd4_2 , post5_2)-> true && eq_charset_atom_tilde1(charset_atom_tilde11_1 , charset_atom_tilde11_2) && eq_charset_atom_charset_prim2(charset_atom_charset_prim23_1 , charset_atom_charset_prim23_2) && eq_post(post5_1 , post5_2)
   |Marker (d , pd1_1),Marker (d' , pd1_2)-> true
   |Paren (d , pd1_1 , form2_1 , pd3_1 , post4_1),Paren (d' , pd1_2 , form2_2 , pd3_2 , post4_2)-> true && eq_form(form2_1 , form2_2) && eq_post(post4_1 , post4_2)
   | _ -> false


and eq_charset_prim = function
   |Range (d , str1_1 , pd2_1 , str3_1),Range (d' , str1_2 , pd2_2 , str3_2)-> true && snd str1_1 = snd str1_2 && snd str3_1 = snd str3_2
   |Char (d , str1_1),Char (d' , str1_2)-> true && snd str1_1 = snd str1_2
   | _ -> false


and eq_form = function
   |Bar (d , forma1_1 , pd2_1 , form3_1),Bar (d' , forma1_2 , pd2_2 , form3_2)-> true && eq_forma(forma1_1 , forma1_2) && eq_form(form3_1 , form3_2)
   |Forma (d , forma1_1),Forma (d' , forma1_2)-> true && eq_forma(forma1_1 , forma1_2)
   | _ -> false


and eq_forma = function
   |Seq (d , seq_forma_atom31_1),Seq (d' , seq_forma_atom31_2)-> true && eq_seq_forma_atom3(seq_forma_atom31_1 , seq_forma_atom31_2)

and eq_grammar = function
   |Grammar (d , str1_1 , pd2_1 , str3_1 , grammar_grammar_whitespace44_1 , grammar_grammar_syntactic55_1 , grammar_grammar_lexical76_1 , grammar_grammar_vars97_1 , grammar_grammar_rules118_1),Grammar (d' , str1_2 , pd2_2 , str3_2 , grammar_grammar_whitespace44_2 , grammar_grammar_syntactic55_2 , grammar_grammar_lexical76_2 , grammar_grammar_vars97_2 , grammar_grammar_rules118_2)-> true && snd str1_1 = snd str1_2 && snd str3_1 = snd str3_2 && eq_grammar_grammar_whitespace4(grammar_grammar_whitespace44_1 , grammar_grammar_whitespace44_2) && eq_grammar_grammar_syntactic5(grammar_grammar_syntactic55_1 , grammar_grammar_syntactic55_2) && eq_grammar_grammar_lexical7(grammar_grammar_lexical76_1 , grammar_grammar_lexical76_2) && eq_grammar_grammar_vars9(grammar_grammar_vars97_1 , grammar_grammar_vars97_2) && eq_grammar_grammar_rules11(grammar_grammar_rules118_1 , grammar_grammar_rules118_2)

and eq_lex = function
   |Lex (d , str1_1 , lex_op2_1 , lex_lex_form133_1 , pd4_1),Lex (d' , str1_2 , lex_op2_2 , lex_lex_form133_2 , pd4_2)-> true && snd str1_1 = snd str1_2 && eq_lex_op(lex_op2_1 , lex_op2_2) && eq_lex_lex_form13(lex_lex_form133_1 , lex_lex_form133_2)

and eq_lex_op = function
   |LexArrow (d , pd1_1),LexArrow (d' , pd1_2)-> true
   |LexThickArrow (d , pd1_1),LexThickArrow (d' , pd1_2)-> true
   | _ -> false


and eq_post = function
   |Star (d , pd1_1),Star (d' , pd1_2)-> true
   |Plus (d , pd1_1),Plus (d' , pd1_2)-> true
   |Qmark (d , pd1_1),Qmark (d' , pd1_2)-> true
   |Plain (d),Plain (d')-> true
   | _ -> false


and eq_prim = function
   |PrimId (d , str1_1),PrimId (d' , str1_2)-> true && snd str1_1 = snd str1_2
   |PrimStringLit (d , str1_1),PrimStringLit (d' , str1_2)-> true && snd str1_1 = snd str1_2
   | _ -> false


and eq_prod = function
   |Prod (d , str1_1 , pd2_1 , str3_1 , pd4_1 , prod_prod_form145_1 , pd6_1),Prod (d' , str1_2 , pd2_2 , str3_2 , pd4_2 , prod_prod_form145_2 , pd6_2)-> true && snd str1_1 = snd str1_2 && snd str3_1 = snd str3_2 && eq_prod_prod_form14(prod_prod_form145_1 , prod_prod_form145_2)
   |ProdUnnamed (d , str1_1 , pd2_1 , produnnamed_prod_form153_1 , pd4_1),ProdUnnamed (d' , str1_2 , pd2_2 , produnnamed_prod_form153_2 , pd4_2)-> true && snd str1_1 = snd str1_2 && eq_produnnamed_prod_form15(produnnamed_prod_form153_1 , produnnamed_prod_form153_2)
   | _ -> false


and eq_rule = function
   |Rule (d , term1_1 , pd2_1 , term3_1),Rule (d' , term1_2 , pd2_2 , term3_2)-> true && eq_term(term1_1 , term1_2) && eq_term(term3_1 , term3_2)

and eq_term = function
   |App (d , str1_1 , pd2_1 , args3_1 , pd4_1),App (d' , str1_2 , pd2_2 , args3_2 , pd4_2)-> true && snd str1_1 = snd str1_2 && eq_args(args3_1 , args3_2)
   |Sym (d , str1_1),Sym (d' , str1_2)-> true && snd str1_1 = snd str1_2
   | _ -> false


and eq_produnnamed_prod_form15 = function
   | (_,None), (_,None)-> true
   | (d , Some(form1_1)), (d' , Some(form1_2))-> true && eq_form(form1_1 , form1_2)
   | _ -> false


and eq_prod_prod_form14 = function
   | (_,None), (_,None)-> true
   | (d , Some(form1_1)), (d' , Some(form1_2))-> true && eq_form(form1_1 , form1_2)
   | _ -> false


and eq_lex_lex_form13 = function
   | (_,None), (_,None)-> true
   | (d , Some(form1_1)), (d' , Some(form1_2))-> true && eq_form(form1_1 , form1_2)
   | _ -> false


and eq_grammar_grammar_rules11 = function
   | (_,None), (_,None)-> true
   | (d , Some(pd1_1 , grammar_grammar_rule122_1)), (d' , Some(pd1_2 , grammar_grammar_rule122_2))-> true && eq_grammar_grammar_rule12(grammar_grammar_rule122_1 , grammar_grammar_rule122_2)
   | _ -> false


and eq_grammar_grammar_rule12 = function
   |(_,[]),(_,[])-> true
   | (d , (rule1_1)::grammar_grammar_rule122_1), (d' , (rule1_2)::grammar_grammar_rule122_2)-> true && eq_rule(rule1_1 , rule1_2) && eq_grammar_grammar_rule12((d,grammar_grammar_rule122_1) , (d',grammar_grammar_rule122_2))
   | _ -> false


and eq_grammar_grammar_vars9 = function
   | (_,None), (_,None)-> true
   | (d , Some(pd1_1 , grammar_grammar_id102_1)), (d' , Some(pd1_2 , grammar_grammar_id102_2))-> true && eq_grammar_grammar_id10(grammar_grammar_id102_1 , grammar_grammar_id102_2)
   | _ -> false


and eq_grammar_grammar_id10 = function
   |(_,[]),(_,[])-> true
   | (d , (str1_1)::grammar_grammar_id102_1), (d' , (str1_2)::grammar_grammar_id102_2)-> true && snd str1_1 = snd str1_2 && eq_grammar_grammar_id10((d,grammar_grammar_id102_1) , (d',grammar_grammar_id102_2))
   | _ -> false


and eq_grammar_grammar_lexical7 = function
   | (_,None), (_,None)-> true
   | (d , Some(pd1_1 , grammar_grammar_lex82_1)), (d' , Some(pd1_2 , grammar_grammar_lex82_2))-> true && eq_grammar_grammar_lex8(grammar_grammar_lex82_1 , grammar_grammar_lex82_2)
   | _ -> false


and eq_grammar_grammar_lex8 = function
   |(_,[]),(_,[])-> true
   | (d , (lex1_1)::grammar_grammar_lex82_1), (d' , (lex1_2)::grammar_grammar_lex82_2)-> true && eq_lex(lex1_1 , lex1_2) && eq_grammar_grammar_lex8((d,grammar_grammar_lex82_1) , (d',grammar_grammar_lex82_2))
   | _ -> false


and eq_grammar_grammar_syntactic5 = function
   | (_,None), (_,None)-> true
   | (d , Some(pd1_1 , grammar_grammar_prod62_1)), (d' , Some(pd1_2 , grammar_grammar_prod62_2))-> true && eq_grammar_grammar_prod6(grammar_grammar_prod62_1 , grammar_grammar_prod62_2)
   | _ -> false


and eq_grammar_grammar_prod6 = function
   |(_,[]),(_,[])-> true
   | (d , (prod1_1)::grammar_grammar_prod62_1), (d' , (prod1_2)::grammar_grammar_prod62_2)-> true && eq_prod(prod1_1 , prod1_2) && eq_grammar_grammar_prod6((d,grammar_grammar_prod62_1) , (d',grammar_grammar_prod62_2))
   | _ -> false


and eq_grammar_grammar_whitespace4 = function
   | (_,None), (_,None)-> true
   | (d , Some(pd1_1 , str2_1)), (d' , Some(pd1_2 , str2_2))-> true && snd str2_1 = snd str2_2
   | _ -> false


and eq_seq_forma_atom3 = function
   |(_,[]),(_,[])-> true
   | (d , (atom1_1)::seq_forma_atom32_1), (d' , (atom1_2)::seq_forma_atom32_2)-> true && eq_atom(atom1_1 , atom1_2) && eq_seq_forma_atom3((d,seq_forma_atom32_1) , (d',seq_forma_atom32_2))
   | _ -> false


and eq_charset_atom_charset_prim2 = function
   |(_,[]),(_,[])-> true
   | (d , (charset_prim1_1)::charset_atom_charset_prim22_1), (d' , (charset_prim1_2)::charset_atom_charset_prim22_2)-> true && eq_charset_prim(charset_prim1_1 , charset_prim1_2) && eq_charset_atom_charset_prim2((d,charset_atom_charset_prim22_1) , (d',charset_atom_charset_prim22_2))
   | _ -> false


and eq_charset_atom_tilde1 = function
   | (_,None), (_,None)-> true
   | (d , Some(pd1_1)), (d' , Some(pd1_2))-> true
   | _ -> false


and eq_args_args_comma0 = function
   |(_,[]),(_,[])-> true
   | (d , (pd1_1 , term2_1)::args_args_comma03_1), (d' , (pd1_2 , term2_2)::args_args_comma03_2)-> true && eq_term(term2_1 , term2_2) && eq_args_args_comma0((d,args_args_comma03_1) , (d',args_args_comma03_2))
   | _ -> false
;;

let eq e = eq_grammar e;;