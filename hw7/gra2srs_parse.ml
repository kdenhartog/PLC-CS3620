type token =
  | EOF
  | ARROW of (Gra2srs_syntax.__term_not_in_ast__)
  | BANG of (Gra2srs_syntax.__term_not_in_ast__)
  | BAR of (Gra2srs_syntax.__term_not_in_ast__)
  | COLON of (Gra2srs_syntax.__term_not_in_ast__)
  | COMMA of (Gra2srs_syntax.__term_not_in_ast__)
  | DOT of (Gra2srs_syntax.__term_not_in_ast__)
  | LEXICAL of (Gra2srs_syntax.__term_not_in_ast__)
  | LP of (Gra2srs_syntax.__term_not_in_ast__)
  | LS of (Gra2srs_syntax.__term_not_in_ast__)
  | MINUS of (Gra2srs_syntax.__term_not_in_ast__)
  | PLUS of (Gra2srs_syntax.__term_not_in_ast__)
  | QMARK of (Gra2srs_syntax.__term_not_in_ast__)
  | RP of (Gra2srs_syntax.__term_not_in_ast__)
  | RS of (Gra2srs_syntax.__term_not_in_ast__)
  | RULES of (Gra2srs_syntax.__term_not_in_ast__)
  | STAR of (Gra2srs_syntax.__term_not_in_ast__)
  | START of (Gra2srs_syntax.__term_not_in_ast__)
  | SYNTACTIC of (Gra2srs_syntax.__term_not_in_ast__)
  | THICKARROW of (Gra2srs_syntax.__term_not_in_ast__)
  | TILDE of (Gra2srs_syntax.__term_not_in_ast__)
  | VARS of (Gra2srs_syntax.__term_not_in_ast__)
  | WHITESPACE of (Gra2srs_syntax.__term_not_in_ast__)
  | ID of (Gra2srs_syntax.__terminal__)
  | STRING_LIT of (Gra2srs_syntax.__terminal__)

open Parsing;;
let _ = parse_error;;
# 2 "gra2srs_parse.mly"
(* auto-generated by gt *)

   open Gra2srs_syntax;;
let parse_error s =
	 let error = s^(Gra2srs_util.string_of_pos (Gra2srs_util.cur_pd())) in failwith error;;

# 38 "gra2srs_parse.ml"
let yytransl_const = [|
    0 (* EOF *);
    0|]

let yytransl_block = [|
  257 (* ARROW *);
  258 (* BANG *);
  259 (* BAR *);
  260 (* COLON *);
  261 (* COMMA *);
  262 (* DOT *);
  263 (* LEXICAL *);
  264 (* LP *);
  265 (* LS *);
  266 (* MINUS *);
  267 (* PLUS *);
  268 (* QMARK *);
  269 (* RP *);
  270 (* RS *);
  271 (* RULES *);
  272 (* STAR *);
  273 (* START *);
  274 (* SYNTACTIC *);
  275 (* THICKARROW *);
  276 (* TILDE *);
  277 (* VARS *);
  278 (* WHITESPACE *);
  279 (* ID *);
  280 (* STRING_LIT *);
    0|]

let yylhs = "\255\255\
\001\000\001\000\031\000\002\000\002\000\004\000\004\000\004\000\
\004\000\007\000\007\000\008\000\008\000\009\000\010\000\020\000\
\022\000\022\000\023\000\023\000\023\000\023\000\024\000\024\000\
\025\000\025\000\028\000\030\000\030\000\027\000\027\000\026\000\
\026\000\021\000\021\000\016\000\016\000\015\000\015\000\018\000\
\018\000\011\000\011\000\013\000\013\000\012\000\012\000\017\000\
\017\000\014\000\014\000\019\000\019\000\029\000\029\000\005\000\
\005\000\006\000\006\000\003\000\003\000\000\000"

let yylen = "\002\000\
\001\000\001\000\000\000\001\000\002\000\002\000\005\000\001\000\
\004\000\003\000\001\000\003\000\001\000\001\000\008\000\004\000\
\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
\006\000\004\000\003\000\004\000\001\000\001\000\001\000\001\000\
\001\000\001\000\001\000\001\000\002\000\001\000\002\000\001\000\
\002\000\001\000\002\000\001\000\002\000\001\000\002\000\001\000\
\002\000\001\000\002\000\001\000\002\000\001\000\002\000\001\000\
\002\000\001\000\001\000\001\000\003\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\002\000\000\000\062\000\001\000\000\000\000\000\
\000\000\000\000\052\000\053\000\000\000\000\000\048\000\000\000\
\049\000\000\000\050\000\000\000\000\000\044\000\000\000\000\000\
\051\000\000\000\045\000\000\000\046\000\000\000\000\000\040\000\
\008\000\000\000\059\000\023\000\024\000\000\000\000\000\031\000\
\000\000\000\000\000\000\014\000\000\000\000\000\017\000\018\000\
\000\000\047\000\000\000\041\000\042\000\000\000\015\000\036\000\
\000\000\058\000\055\000\000\000\000\000\020\000\021\000\019\000\
\006\000\022\000\026\000\000\000\035\000\000\000\000\000\043\000\
\000\000\037\000\000\000\000\000\038\000\000\000\000\000\000\000\
\000\000\056\000\012\000\033\000\000\000\000\000\016\000\000\000\
\039\000\000\000\009\000\000\000\000\000\057\000\025\000\000\000\
\000\000\004\000\027\000\010\000\007\000\028\000\000\000\005\000\
\060\000\000\000\061\000"

let yydgoto = "\002\000\
\005\000\096\000\104\000\038\000\080\000\039\000\081\000\040\000\
\041\000\006\000\052\000\027\000\021\000\017\000\074\000\055\000\
\014\000\031\000\010\000\028\000\070\000\049\000\065\000\042\000\
\018\000\085\000\043\000\075\000\044\000\076\000\058\000"

let yysindex = "\010\000\
\002\000\000\000\000\000\252\254\000\000\000\000\016\255\018\255\
\026\255\032\255\000\000\000\000\033\255\053\255\000\000\019\255\
\000\000\033\255\000\000\044\255\059\255\000\000\013\255\046\255\
\000\000\007\255\000\000\044\255\000\000\058\255\071\255\000\000\
\000\000\013\255\000\000\000\000\000\000\013\255\074\255\000\000\
\081\255\054\255\082\255\000\000\000\000\086\255\000\000\000\000\
\013\255\000\000\058\255\000\000\000\000\066\255\000\000\000\000\
\077\255\000\000\000\000\070\255\013\255\000\000\000\000\000\000\
\000\000\000\000\000\000\013\255\000\000\085\255\000\000\000\000\
\087\255\000\000\066\255\092\255\000\000\054\255\088\255\089\255\
\070\255\000\000\000\000\000\000\090\255\000\000\000\000\066\255\
\000\000\066\255\000\000\075\255\054\255\000\000\000\000\091\255\
\095\255\000\000\000\000\000\000\000\000\000\000\066\255\000\000\
\000\000\095\255\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\
\000\000\006\000\000\000\000\000\006\000\007\000\000\000\000\000\
\000\000\006\000\000\000\007\000\003\000\000\000\062\255\000\000\
\000\000\000\000\000\000\007\000\000\000\003\000\102\000\000\000\
\000\000\096\255\000\000\000\000\000\000\048\255\000\000\000\000\
\003\255\039\255\000\000\000\000\067\255\000\000\000\000\000\000\
\062\255\000\000\003\000\000\000\000\000\102\000\000\000\000\000\
\000\000\000\000\000\000\093\255\096\255\000\000\000\000\000\000\
\000\000\000\000\000\000\062\255\000\000\000\000\068\255\000\000\
\001\000\000\000\102\000\000\000\000\000\039\255\242\254\000\000\
\093\255\000\000\000\000\000\000\000\000\069\255\000\000\098\255\
\000\000\000\000\000\000\000\000\039\255\000\000\000\000\000\000\
\098\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\098\255\000\000"

let yygindex = "\000\000\
\000\000\000\000\008\000\000\000\025\000\000\000\000\000\226\255\
\000\000\000\000\057\000\081\000\000\000\094\000\038\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\207\255\000\000\
\000\000\000\000\000\000\000\000\077\000\196\255\004\000"

let yytablesize = 284
let yytable = "\011\000\
\029\000\003\000\003\000\057\000\003\000\003\000\003\000\047\000\
\013\000\011\000\001\000\011\000\007\000\015\000\033\000\013\000\
\019\000\022\000\069\000\023\000\034\000\019\000\024\000\029\000\
\032\000\048\000\045\000\097\000\091\000\099\000\083\000\029\000\
\035\000\053\000\056\000\036\000\037\000\084\000\008\000\009\000\
\003\000\003\000\106\000\101\000\003\000\066\000\003\000\003\000\
\012\000\013\000\054\000\003\000\071\000\054\000\053\000\016\000\
\003\000\077\000\003\000\020\000\054\000\003\000\003\000\082\000\
\062\000\063\000\026\000\003\000\046\000\064\000\003\000\086\000\
\030\000\034\000\032\000\058\000\058\000\058\000\077\000\030\000\
\051\000\066\000\060\000\061\000\082\000\054\000\068\000\067\000\
\073\000\078\000\087\000\098\000\090\000\079\000\088\000\095\000\
\066\000\092\000\100\000\103\000\105\000\003\000\093\000\102\000\
\003\000\094\000\003\000\072\000\050\000\105\000\003\000\025\000\
\089\000\107\000\059\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\029\000\000\000\000\000\000\000\029\000\000\000\000\000\
\000\000\000\000\000\000\003\000\003\000\029\000\000\000\000\000\
\000\000\003\000\000\000\003\000\003\000\003\000\003\000\029\000\
\004\000\003\000\003\000\003\000"

let yycheck = "\014\001\
\000\000\000\000\000\000\034\000\000\000\000\000\000\000\001\001\
\006\001\024\001\001\000\008\000\017\001\010\000\002\001\013\001\
\013\000\014\000\049\000\001\001\008\001\018\000\004\001\020\000\
\021\000\019\001\023\000\088\000\078\000\090\000\061\000\028\000\
\020\001\030\000\031\000\023\001\024\001\068\000\023\001\022\001\
\002\001\003\001\103\000\093\000\006\001\042\000\008\001\009\001\
\023\001\018\001\003\001\013\001\049\000\006\001\051\000\023\001\
\009\001\054\000\020\001\007\001\013\001\023\001\024\001\060\000\
\011\001\012\001\023\001\006\001\023\001\016\001\009\001\068\000\
\006\001\006\001\006\001\009\001\009\001\009\001\075\000\021\001\
\023\001\078\000\009\001\003\001\081\000\015\001\001\001\006\001\
\023\001\013\001\006\001\088\000\001\001\024\001\008\001\006\001\
\093\000\010\001\024\001\005\001\097\000\000\000\014\001\013\001\
\009\001\081\000\014\001\051\000\028\000\106\000\013\001\018\000\
\075\000\106\000\038\000\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\001\001\255\255\255\255\255\255\005\001\255\255\255\255\
\255\255\255\255\255\255\007\001\007\001\013\001\255\255\255\255\
\255\255\015\001\255\255\015\001\015\001\015\001\018\001\023\001\
\023\001\021\001\021\001\021\001"

let yynames_const = "\
  EOF\000\
  "

let yynames_block = "\
  ARROW\000\
  BANG\000\
  BAR\000\
  COLON\000\
  COMMA\000\
  DOT\000\
  LEXICAL\000\
  LP\000\
  LS\000\
  MINUS\000\
  PLUS\000\
  QMARK\000\
  RP\000\
  RS\000\
  RULES\000\
  STAR\000\
  START\000\
  SYNTACTIC\000\
  THICKARROW\000\
  TILDE\000\
  VARS\000\
  WHITESPACE\000\
  ID\000\
  STRING_LIT\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar) in
    Obj.repr(
# 53 "gra2srs_parse.mly"
           ( Some(_1) )
# 265 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar option))
; (fun __caml_parser_env ->
    Obj.repr(
# 54 "gra2srs_parse.mly"
       ( None )
# 271 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar option))
; (fun __caml_parser_env ->
    Obj.repr(
# 59 "gra2srs_parse.mly"
  ( Gra2srs_util.cur_pd() )
# 277 "gra2srs_parse.ml"
               : Gra2srs_util.pd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 62 "gra2srs_parse.mly"
                 ( Empty(_1) )
# 284 "gra2srs_parse.ml"
               : Gra2srs_syntax.args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.term) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.args_args_comma0) in
    Obj.repr(
# 65 "gra2srs_parse.mly"
                          ( Args(pd_term _1, _1, _2) )
# 292 "gra2srs_parse.ml"
               : Gra2srs_syntax.args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.prim) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.post) in
    Obj.repr(
# 68 "gra2srs_parse.mly"
              ( Id(pd_prim _1, _1, _2) )
# 300 "gra2srs_parse.ml"
               : Gra2srs_syntax.atom))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : Gra2srs_syntax.charset_atom_tilde1) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : Gra2srs_syntax.__term_not_in_ast__) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.charset_atom_charset_prim2) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.post) in
    Obj.repr(
# 71 "gra2srs_parse.mly"
                                                              ( Charset(pd_charset_atom_tilde1 _1, _1, _2, _3, _4, _5) )
# 311 "gra2srs_parse.ml"
               : Gra2srs_syntax.atom))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 74 "gra2srs_parse.mly"
         ( Marker(get_term_pd_not_in_ast _1, _1) )
# 318 "gra2srs_parse.ml"
               : Gra2srs_syntax.atom))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : Gra2srs_syntax.__term_not_in_ast__) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.form) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.post) in
    Obj.repr(
# 77 "gra2srs_parse.mly"
                    ( Paren(get_term_pd_not_in_ast _1, _1, _2, _3, _4) )
# 328 "gra2srs_parse.ml"
               : Gra2srs_syntax.atom))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.__terminal__) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__terminal__) in
    Obj.repr(
# 80 "gra2srs_parse.mly"
                                ( Range(get_terminal_pd _1, _1, _2, _3) )
# 337 "gra2srs_parse.ml"
               : Gra2srs_syntax.charset_prim))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__terminal__) in
    Obj.repr(
# 83 "gra2srs_parse.mly"
               ( Char(get_terminal_pd _1, _1) )
# 344 "gra2srs_parse.ml"
               : Gra2srs_syntax.charset_prim))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.forma) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.form) in
    Obj.repr(
# 86 "gra2srs_parse.mly"
                   ( Bar(pd_forma _1, _1, _2, _3) )
# 353 "gra2srs_parse.ml"
               : Gra2srs_syntax.form))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.forma) in
    Obj.repr(
# 89 "gra2srs_parse.mly"
          ( Forma(pd_forma _1, _1) )
# 360 "gra2srs_parse.ml"
               : Gra2srs_syntax.form))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.seq_forma_atom3) in
    Obj.repr(
# 92 "gra2srs_parse.mly"
                    ( Seq(pd_seq_forma_atom3 _1, _1) )
# 367 "gra2srs_parse.ml"
               : Gra2srs_syntax.forma))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 7 : Gra2srs_syntax.__terminal__) in
    let _2 = (Parsing.peek_val __caml_parser_env 6 : Gra2srs_syntax.__term_not_in_ast__) in
    let _3 = (Parsing.peek_val __caml_parser_env 5 : Gra2srs_syntax.__terminal__) in
    let _4 = (Parsing.peek_val __caml_parser_env 4 : Gra2srs_syntax.grammar_grammar_whitespace4) in
    let _5 = (Parsing.peek_val __caml_parser_env 3 : Gra2srs_syntax.grammar_grammar_syntactic5) in
    let _6 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.grammar_grammar_lexical7) in
    let _7 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.grammar_grammar_vars9) in
    let _8 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_rules11) in
    Obj.repr(
# 95 "gra2srs_parse.mly"
                                                                                                                                              ( Grammar(get_terminal_pd _1, _1, _2, _3, _4, _5, _6, _7, _8) )
# 381 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : Gra2srs_syntax.__terminal__) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.lex_op) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.lex_lex_form13) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 98 "gra2srs_parse.mly"
                                 ( Lex(get_terminal_pd _1, _1, _2, _3, _4) )
# 391 "gra2srs_parse.ml"
               : Gra2srs_syntax.lex))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 101 "gra2srs_parse.mly"
          ( LexArrow(get_term_pd_not_in_ast _1, _1) )
# 398 "gra2srs_parse.ml"
               : Gra2srs_syntax.lex_op))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 104 "gra2srs_parse.mly"
               ( LexThickArrow(get_term_pd_not_in_ast _1, _1) )
# 405 "gra2srs_parse.ml"
               : Gra2srs_syntax.lex_op))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 107 "gra2srs_parse.mly"
         ( Star(get_term_pd_not_in_ast _1, _1) )
# 412 "gra2srs_parse.ml"
               : Gra2srs_syntax.post))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 110 "gra2srs_parse.mly"
         ( Plus(get_term_pd_not_in_ast _1, _1) )
# 419 "gra2srs_parse.ml"
               : Gra2srs_syntax.post))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 113 "gra2srs_parse.mly"
          ( Qmark(get_term_pd_not_in_ast _1, _1) )
# 426 "gra2srs_parse.ml"
               : Gra2srs_syntax.post))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 116 "gra2srs_parse.mly"
                 ( Plain(_1) )
# 433 "gra2srs_parse.ml"
               : Gra2srs_syntax.post))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__terminal__) in
    Obj.repr(
# 119 "gra2srs_parse.mly"
       ( PrimId(get_terminal_pd _1, _1) )
# 440 "gra2srs_parse.ml"
               : Gra2srs_syntax.prim))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__terminal__) in
    Obj.repr(
# 122 "gra2srs_parse.mly"
               ( PrimStringLit(get_terminal_pd _1, _1) )
# 447 "gra2srs_parse.ml"
               : Gra2srs_syntax.prim))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : Gra2srs_syntax.__terminal__) in
    let _2 = (Parsing.peek_val __caml_parser_env 4 : Gra2srs_syntax.__term_not_in_ast__) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : Gra2srs_syntax.__terminal__) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.__term_not_in_ast__) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.prod_prod_form14) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 125 "gra2srs_parse.mly"
                                           ( Prod(get_terminal_pd _1, _1, _2, _3, _4, _5, _6) )
# 459 "gra2srs_parse.ml"
               : Gra2srs_syntax.prod))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : Gra2srs_syntax.__terminal__) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.__term_not_in_ast__) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.produnnamed_prod_form15) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 128 "gra2srs_parse.mly"
                                         ( ProdUnnamed(get_terminal_pd _1, _1, _2, _3, _4) )
# 469 "gra2srs_parse.ml"
               : Gra2srs_syntax.prod))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.term) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.term) in
    Obj.repr(
# 131 "gra2srs_parse.mly"
                    ( Rule(pd_term _1, _1, _2, _3) )
# 478 "gra2srs_parse.ml"
               : Gra2srs_syntax.rule))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : Gra2srs_syntax.__terminal__) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.__term_not_in_ast__) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 134 "gra2srs_parse.mly"
                  ( App(get_terminal_pd _1, _1, _2, _3, _4) )
# 488 "gra2srs_parse.ml"
               : Gra2srs_syntax.term))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__terminal__) in
    Obj.repr(
# 137 "gra2srs_parse.mly"
       ( Sym(get_terminal_pd _1, _1) )
# 495 "gra2srs_parse.ml"
               : Gra2srs_syntax.term))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 140 "gra2srs_parse.mly"
                 ( (_1, None) )
# 502 "gra2srs_parse.ml"
               : Gra2srs_syntax.produnnamed_prod_form15))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.form) in
    Obj.repr(
# 143 "gra2srs_parse.mly"
         ( (pd_form _1, Some( _1 )) )
# 509 "gra2srs_parse.ml"
               : Gra2srs_syntax.produnnamed_prod_form15))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 146 "gra2srs_parse.mly"
                 ( (_1, None) )
# 516 "gra2srs_parse.ml"
               : Gra2srs_syntax.prod_prod_form14))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.form) in
    Obj.repr(
# 149 "gra2srs_parse.mly"
         ( (pd_form _1, Some( _1 )) )
# 523 "gra2srs_parse.ml"
               : Gra2srs_syntax.prod_prod_form14))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 152 "gra2srs_parse.mly"
                 ( (_1, None) )
# 530 "gra2srs_parse.ml"
               : Gra2srs_syntax.lex_lex_form13))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.form) in
    Obj.repr(
# 155 "gra2srs_parse.mly"
         ( (pd_form _1, Some( _1 )) )
# 537 "gra2srs_parse.ml"
               : Gra2srs_syntax.lex_lex_form13))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 158 "gra2srs_parse.mly"
                 ( (_1, None) )
# 544 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_rules11))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_rule12) in
    Obj.repr(
# 161 "gra2srs_parse.mly"
                                 ( (get_term_pd_not_in_ast _1, Some( _1 , _2)) )
# 552 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_rules11))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 164 "gra2srs_parse.mly"
                 ( (_1, []) )
# 559 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_rule12))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.rule) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_rule12) in
    Obj.repr(
# 167 "gra2srs_parse.mly"
                                ( (pd_rule _1, (_1)::(snd _2)) )
# 567 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_rule12))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 170 "gra2srs_parse.mly"
                 ( (_1, None) )
# 574 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_vars9))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_id10) in
    Obj.repr(
# 173 "gra2srs_parse.mly"
                              ( (get_term_pd_not_in_ast _1, Some( _1 , _2)) )
# 582 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_vars9))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 176 "gra2srs_parse.mly"
                 ( (_1, []) )
# 589 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_id10))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__terminal__) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_id10) in
    Obj.repr(
# 179 "gra2srs_parse.mly"
                            ( (get_terminal_pd _1, (_1)::(snd _2)) )
# 597 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_id10))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 182 "gra2srs_parse.mly"
                 ( (_1, None) )
# 604 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_lexical7))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_lex8) in
    Obj.repr(
# 185 "gra2srs_parse.mly"
                                 ( (get_term_pd_not_in_ast _1, Some( _1 , _2)) )
# 612 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_lexical7))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 188 "gra2srs_parse.mly"
                 ( (_1, []) )
# 619 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_lex8))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.lex) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_lex8) in
    Obj.repr(
# 191 "gra2srs_parse.mly"
                             ( (pd_lex _1, (_1)::(snd _2)) )
# 627 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_lex8))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 194 "gra2srs_parse.mly"
                 ( (_1, None) )
# 634 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_syntactic5))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_prod6) in
    Obj.repr(
# 197 "gra2srs_parse.mly"
                                    ( (get_term_pd_not_in_ast _1, Some( _1 , _2)) )
# 642 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_syntactic5))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 200 "gra2srs_parse.mly"
                 ( (_1, []) )
# 649 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_prod6))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.prod) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.grammar_grammar_prod6) in
    Obj.repr(
# 203 "gra2srs_parse.mly"
                               ( (pd_prod _1, (_1)::(snd _2)) )
# 657 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_prod6))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 206 "gra2srs_parse.mly"
                 ( (_1, None) )
# 664 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_whitespace4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.__term_not_in_ast__) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__terminal__) in
    Obj.repr(
# 209 "gra2srs_parse.mly"
                  ( (get_term_pd_not_in_ast _1, Some( _1 , _2)) )
# 672 "gra2srs_parse.ml"
               : Gra2srs_syntax.grammar_grammar_whitespace4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.atom) in
    Obj.repr(
# 212 "gra2srs_parse.mly"
         ( (pd_atom _1, (_1)::[]) )
# 679 "gra2srs_parse.ml"
               : Gra2srs_syntax.seq_forma_atom3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.atom) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.seq_forma_atom3) in
    Obj.repr(
# 215 "gra2srs_parse.mly"
                         ( (pd_atom _1, (_1)::(snd _2)) )
# 687 "gra2srs_parse.ml"
               : Gra2srs_syntax.seq_forma_atom3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 218 "gra2srs_parse.mly"
                 ( (_1, []) )
# 694 "gra2srs_parse.ml"
               : Gra2srs_syntax.charset_atom_charset_prim2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.charset_prim) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.charset_atom_charset_prim2) in
    Obj.repr(
# 221 "gra2srs_parse.mly"
                                            ( (pd_charset_prim _1, (_1)::(snd _2)) )
# 702 "gra2srs_parse.ml"
               : Gra2srs_syntax.charset_atom_charset_prim2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 224 "gra2srs_parse.mly"
                 ( (_1, None) )
# 709 "gra2srs_parse.ml"
               : Gra2srs_syntax.charset_atom_tilde1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.__term_not_in_ast__) in
    Obj.repr(
# 227 "gra2srs_parse.mly"
          ( (get_term_pd_not_in_ast _1, Some( _1 )) )
# 716 "gra2srs_parse.ml"
               : Gra2srs_syntax.charset_atom_tilde1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_util.pd) in
    Obj.repr(
# 230 "gra2srs_parse.mly"
                 ( (_1, []) )
# 723 "gra2srs_parse.ml"
               : Gra2srs_syntax.args_args_comma0))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Gra2srs_syntax.__term_not_in_ast__) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Gra2srs_syntax.term) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Gra2srs_syntax.args_args_comma0) in
    Obj.repr(
# 233 "gra2srs_parse.mly"
                                ( (get_term_pd_not_in_ast _1, (_1, _2)::(snd _3)) )
# 732 "gra2srs_parse.ml"
               : Gra2srs_syntax.args_args_comma0))
(* Entry main *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let main (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Gra2srs_syntax.grammar option)
