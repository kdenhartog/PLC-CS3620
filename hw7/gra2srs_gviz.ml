(* auto-generated by gt *)

open Gra2srs_syntax;;

let cur_line = ref 1;;
let del = ref 0;;
let rec print_new_line (os:string->unit) (do_print:bool) (p:int) : unit =
   if(p > !cur_line && do_print) then ( 
      os "\n"; 
      incr cur_line;
      print_new_line os do_print p;
   );;


let rec dummy () = ()
and gviz_terminal (os:string->unit) (to_pretty_print:bool) (cons:string) = function
   (d,str1) -> 
      print_new_line os to_pretty_print (fst d); let str1 = let st = ref "" in 
      String.iter(fun s -> if(s = '"') then( st := ((!st)^"\\"^(Char.escaped s)))
      else (st := ((!st)^(Char.escaped s)))) str1; !st in os str1

and gviz_args (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Empty (d) -> let del' = !del in incr del; let _ = del' in os "Empty"; os (string_of_int del');  os ";\n"; os "Empty"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   |Args (d , term1 , args_args_comma02) -> let del' = !del in incr del; let _ = del' in os "Args"; os (string_of_int del');  os ";\n"; os "Args"; os (string_of_int del'); os "[label=\""; os "Args"; os "\"];\n"; os "Args"; os (string_of_int del');  os " -- ";gviz_term os to_pretty_print (cons) term1; os "Args"; os (string_of_int del'); os "[label=\""; os "Args"; os "\"];\n"; os "Args"; os (string_of_int del');  os " -- ";gviz_args_args_comma0 os to_pretty_print ("Args"^(string_of_int del')) args_args_comma02;  () 

and gviz_atom (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Id (d , prim1 , post2) -> let del' = !del in incr del; let _ = del' in os "Id"; os (string_of_int del');  os ";\n"; os "Id"; os (string_of_int del'); os "[label=\""; os "Id"; os "\"];\n"; os "Id"; os (string_of_int del');  os " -- ";gviz_prim os to_pretty_print (cons) prim1; os "Id"; os (string_of_int del'); os "[label=\""; os "Id"; os "\"];\n"; os "Id"; os (string_of_int del');  os " -- ";gviz_post os to_pretty_print (cons) post2;  () 
   |Charset (d , charset_atom_tilde11 , pd2 , charset_atom_charset_prim23 , pd4 , post5) -> let del' = !del in incr del; let _ = del' in os "Charset"; os (string_of_int del');  os ";\n"; os "Charset"; os (string_of_int del'); os "[label=\""; os "Charset"; os "\"];\n"; os "Charset"; os (string_of_int del');  os " -- ";gviz_charset_atom_tilde1 os to_pretty_print (cons) charset_atom_tilde11; os "Charset"; os (string_of_int del'); os "[label=\""; os "Charset"; os "\"];\n"; os "Charset"; os (string_of_int del');  os " -- "; os "Charset"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Charset"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "["; os "\"];\n"; os "Charset"; os (string_of_int del'); os "[label=\""; os "Charset"; os "\"];\n"; os "Charset"; os (string_of_int del');  os " -- ";gviz_charset_atom_charset_prim2 os to_pretty_print ("Charset"^(string_of_int del')) charset_atom_charset_prim23; os "Charset"; os (string_of_int del'); os "[label=\""; os "Charset"; os "\"];\n"; os "Charset"; os (string_of_int del');  os " -- "; os "Charset"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "Charset"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  os "]"; os "\"];\n"; os "Charset"; os (string_of_int del'); os "[label=\""; os "Charset"; os "\"];\n"; os "Charset"; os (string_of_int del');  os " -- ";gviz_post os to_pretty_print (cons) post5;  () 
   |Marker (d , pd1) -> let del' = !del in incr del; let _ = del' in os "Marker"; os (string_of_int del');  os ";\n"; os "Marker"; os (string_of_int del'); os "[label=\""; os "Marker"; os "\"];\n"; os "Marker"; os (string_of_int del');  os " -- "; os "Marker"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Marker"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "!"; os "\"];\n";  () 
   |Paren (d , pd1 , form2 , pd3 , post4) -> let del' = !del in incr del; let _ = del' in os "Paren"; os (string_of_int del');  os ";\n"; os "Paren"; os (string_of_int del'); os "[label=\""; os "Paren"; os "\"];\n"; os "Paren"; os (string_of_int del');  os " -- "; os "Paren"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Paren"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "("; os "\"];\n"; os "Paren"; os (string_of_int del'); os "[label=\""; os "Paren"; os "\"];\n"; os "Paren"; os (string_of_int del');  os " -- ";gviz_form os to_pretty_print (cons) form2; os "Paren"; os (string_of_int del'); os "[label=\""; os "Paren"; os "\"];\n"; os "Paren"; os (string_of_int del');  os " -- "; os "Paren"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "Paren"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  os ")"; os "\"];\n"; os "Paren"; os (string_of_int del'); os "[label=\""; os "Paren"; os "\"];\n"; os "Paren"; os (string_of_int del');  os " -- ";gviz_post os to_pretty_print (cons) post4;  () 

and gviz_charset_prim (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Range (d , str1 , pd2 , str3) -> let del' = !del in incr del; let _ = del' in os "Range"; os (string_of_int del');  os ";\n"; os "Range"; os (string_of_int del'); os "[label=\""; os "Range"; os "\"];\n"; os "Range"; os (string_of_int del');  os " -- "; os "Range"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Range"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n"; os "Range"; os (string_of_int del'); os "[label=\""; os "Range"; os "\"];\n"; os "Range"; os (string_of_int del');  os " -- "; os "Range"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "Range"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  os "-"; os "\"];\n"; os "Range"; os (string_of_int del'); os "[label=\""; os "Range"; os "\"];\n"; os "Range"; os (string_of_int del');  os " -- "; os "Range"; os (string_of_int del');  os (string_of_int del'); os "_med2;\n";os "Range"; os (string_of_int del');  os (string_of_int del'); os "_med2[label=\"";  gviz_terminal os to_pretty_print (cons) str3; os "\"];\n";  () 
   |Char (d , str1) -> let del' = !del in incr del; let _ = del' in os "Char"; os (string_of_int del');  os ";\n"; os "Char"; os (string_of_int del'); os "[label=\""; os "Char"; os "\"];\n"; os "Char"; os (string_of_int del');  os " -- "; os "Char"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Char"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n";  () 

and gviz_form (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Bar (d , forma1 , pd2 , form3) -> let del' = !del in incr del; let _ = del' in os "Bar"; os (string_of_int del');  os ";\n"; os "Bar"; os (string_of_int del'); os "[label=\""; os "Bar"; os "\"];\n"; os "Bar"; os (string_of_int del');  os " -- ";gviz_forma os to_pretty_print (cons) forma1; os "Bar"; os (string_of_int del'); os "[label=\""; os "Bar"; os "\"];\n"; os "Bar"; os (string_of_int del');  os " -- "; os "Bar"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Bar"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "|"; os "\"];\n"; os "Bar"; os (string_of_int del'); os "[label=\""; os "Bar"; os "\"];\n"; os "Bar"; os (string_of_int del');  os " -- ";gviz_form os to_pretty_print (cons) form3;  () 
   |Forma (d , forma1) -> let del' = !del in incr del; let _ = del' in os "Forma"; os (string_of_int del');  os ";\n"; os "Forma"; os (string_of_int del'); os "[label=\""; os "Forma"; os "\"];\n"; os "Forma"; os (string_of_int del');  os " -- ";gviz_forma os to_pretty_print (cons) forma1;  () 

and gviz_forma (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Seq (d , seq_forma_atom31) -> let del' = !del in incr del; let _ = del' in os "Seq"; os (string_of_int del');  os ";\n"; os "Seq"; os (string_of_int del'); os "[label=\""; os "Seq"; os "\"];\n"; os "Seq"; os (string_of_int del');  os " -- ";gviz_seq_forma_atom3 os to_pretty_print ("Seq"^(string_of_int del')) seq_forma_atom31;  () 

and gviz_grammar (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Grammar (d , str1 , pd2 , str3 , grammar_grammar_whitespace44 , grammar_grammar_syntactic55 , grammar_grammar_lexical76 , grammar_grammar_vars97 , grammar_grammar_rules118) -> let del' = !del in incr del; let _ = del' in os "Grammar"; os (string_of_int del');  os ";\n"; os "Grammar"; os (string_of_int del'); os "[label=\""; os "Grammar"; os "\"];\n"; os "Grammar"; os (string_of_int del');  os " -- "; os "Grammar"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Grammar"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n"; os "Grammar"; os (string_of_int del'); os "[label=\""; os "Grammar"; os "\"];\n"; os "Grammar"; os (string_of_int del');  os " -- "; os "Grammar"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "Grammar"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  os "Start"; os "\"];\n"; os "Grammar"; os (string_of_int del'); os "[label=\""; os "Grammar"; os "\"];\n"; os "Grammar"; os (string_of_int del');  os " -- "; os "Grammar"; os (string_of_int del');  os (string_of_int del'); os "_med2;\n";os "Grammar"; os (string_of_int del');  os (string_of_int del'); os "_med2[label=\"";  gviz_terminal os to_pretty_print (cons) str3; os "\"];\n"; os "Grammar"; os (string_of_int del'); os "[label=\""; os "Grammar"; os "\"];\n"; os "Grammar"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_whitespace4 os to_pretty_print (cons) grammar_grammar_whitespace44; os "Grammar"; os (string_of_int del'); os "[label=\""; os "Grammar"; os "\"];\n"; os "Grammar"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_syntactic5 os to_pretty_print (cons) grammar_grammar_syntactic55; os "Grammar"; os (string_of_int del'); os "[label=\""; os "Grammar"; os "\"];\n"; os "Grammar"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_lexical7 os to_pretty_print (cons) grammar_grammar_lexical76; os "Grammar"; os (string_of_int del'); os "[label=\""; os "Grammar"; os "\"];\n"; os "Grammar"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_vars9 os to_pretty_print (cons) grammar_grammar_vars97; os "Grammar"; os (string_of_int del'); os "[label=\""; os "Grammar"; os "\"];\n"; os "Grammar"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_rules11 os to_pretty_print (cons) grammar_grammar_rules118;  () 

and gviz_lex (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Lex (d , str1 , lex_op2 , lex_lex_form133 , pd4) -> let del' = !del in incr del; let _ = del' in os "Lex"; os (string_of_int del');  os ";\n"; os "Lex"; os (string_of_int del'); os "[label=\""; os "Lex"; os "\"];\n"; os "Lex"; os (string_of_int del');  os " -- "; os "Lex"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Lex"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n"; os "Lex"; os (string_of_int del'); os "[label=\""; os "Lex"; os "\"];\n"; os "Lex"; os (string_of_int del');  os " -- ";gviz_lex_op os to_pretty_print (cons) lex_op2; os "Lex"; os (string_of_int del'); os "[label=\""; os "Lex"; os "\"];\n"; os "Lex"; os (string_of_int del');  os " -- ";gviz_lex_lex_form13 os to_pretty_print (cons) lex_lex_form133; os "Lex"; os (string_of_int del'); os "[label=\""; os "Lex"; os "\"];\n"; os "Lex"; os (string_of_int del');  os " -- "; os "Lex"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "Lex"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  os "."; os "\"];\n";  () 

and gviz_lex_op (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |LexArrow (d , pd1) -> let del' = !del in incr del; let _ = del' in os "LexArrow"; os (string_of_int del');  os ";\n"; os "LexArrow"; os (string_of_int del'); os "[label=\""; os "LexArrow"; os "\"];\n"; os "LexArrow"; os (string_of_int del');  os " -- "; os "LexArrow"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "LexArrow"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "->"; os "\"];\n";  () 
   |LexThickArrow (d , pd1) -> let del' = !del in incr del; let _ = del' in os "LexThickArrow"; os (string_of_int del');  os ";\n"; os "LexThickArrow"; os (string_of_int del'); os "[label=\""; os "LexThickArrow"; os "\"];\n"; os "LexThickArrow"; os (string_of_int del');  os " -- "; os "LexThickArrow"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "LexThickArrow"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "=>"; os "\"];\n";  () 

and gviz_post (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Star (d , pd1) -> let del' = !del in incr del; let _ = del' in os "Star"; os (string_of_int del');  os ";\n"; os "Star"; os (string_of_int del'); os "[label=\""; os "Star"; os "\"];\n"; os "Star"; os (string_of_int del');  os " -- "; os "Star"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Star"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "*"; os "\"];\n";  () 
   |Plus (d , pd1) -> let del' = !del in incr del; let _ = del' in os "Plus"; os (string_of_int del');  os ";\n"; os "Plus"; os (string_of_int del'); os "[label=\""; os "Plus"; os "\"];\n"; os "Plus"; os (string_of_int del');  os " -- "; os "Plus"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Plus"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "+"; os "\"];\n";  () 
   |Qmark (d , pd1) -> let del' = !del in incr del; let _ = del' in os "Qmark"; os (string_of_int del');  os ";\n"; os "Qmark"; os (string_of_int del'); os "[label=\""; os "Qmark"; os "\"];\n"; os "Qmark"; os (string_of_int del');  os " -- "; os "Qmark"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Qmark"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "?"; os "\"];\n";  () 
   |Plain (d) -> let del' = !del in incr del; let _ = del' in os "Plain"; os (string_of_int del');  os ";\n"; os "Plain"; os (string_of_int del');  os "[label=\"None\"];\n";  () 

and gviz_prim (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |PrimId (d , str1) -> let del' = !del in incr del; let _ = del' in os "PrimId"; os (string_of_int del');  os ";\n"; os "PrimId"; os (string_of_int del'); os "[label=\""; os "PrimId"; os "\"];\n"; os "PrimId"; os (string_of_int del');  os " -- "; os "PrimId"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "PrimId"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n";  () 
   |PrimStringLit (d , str1) -> let del' = !del in incr del; let _ = del' in os "PrimStringLit"; os (string_of_int del');  os ";\n"; os "PrimStringLit"; os (string_of_int del'); os "[label=\""; os "PrimStringLit"; os "\"];\n"; os "PrimStringLit"; os (string_of_int del');  os " -- "; os "PrimStringLit"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "PrimStringLit"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n";  () 

and gviz_prod (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Prod (d , str1 , pd2 , str3 , pd4 , prod_prod_form145 , pd6) -> let del' = !del in incr del; let _ = del' in os "Prod"; os (string_of_int del');  os ";\n"; os "Prod"; os (string_of_int del'); os "[label=\""; os "Prod"; os "\"];\n"; os "Prod"; os (string_of_int del');  os " -- "; os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n"; os "Prod"; os (string_of_int del'); os "[label=\""; os "Prod"; os "\"];\n"; os "Prod"; os (string_of_int del');  os " -- "; os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  os ":"; os "\"];\n"; os "Prod"; os (string_of_int del'); os "[label=\""; os "Prod"; os "\"];\n"; os "Prod"; os (string_of_int del');  os " -- "; os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med2;\n";os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med2[label=\"";  gviz_terminal os to_pretty_print (cons) str3; os "\"];\n"; os "Prod"; os (string_of_int del'); os "[label=\""; os "Prod"; os "\"];\n"; os "Prod"; os (string_of_int del');  os " -- "; os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med3;\n";os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med3[label=\"";  os "->"; os "\"];\n"; os "Prod"; os (string_of_int del'); os "[label=\""; os "Prod"; os "\"];\n"; os "Prod"; os (string_of_int del');  os " -- ";gviz_prod_prod_form14 os to_pretty_print (cons) prod_prod_form145; os "Prod"; os (string_of_int del'); os "[label=\""; os "Prod"; os "\"];\n"; os "Prod"; os (string_of_int del');  os " -- "; os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med4;\n";os "Prod"; os (string_of_int del');  os (string_of_int del'); os "_med4[label=\"";  os "."; os "\"];\n";  () 
   |ProdUnnamed (d , str1 , pd2 , produnnamed_prod_form153 , pd4) -> let del' = !del in incr del; let _ = del' in os "ProdUnnamed"; os (string_of_int del');  os ";\n"; os "ProdUnnamed"; os (string_of_int del'); os "[label=\""; os "ProdUnnamed"; os "\"];\n"; os "ProdUnnamed"; os (string_of_int del');  os " -- "; os "ProdUnnamed"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "ProdUnnamed"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n"; os "ProdUnnamed"; os (string_of_int del'); os "[label=\""; os "ProdUnnamed"; os "\"];\n"; os "ProdUnnamed"; os (string_of_int del');  os " -- "; os "ProdUnnamed"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "ProdUnnamed"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  os "->"; os "\"];\n"; os "ProdUnnamed"; os (string_of_int del'); os "[label=\""; os "ProdUnnamed"; os "\"];\n"; os "ProdUnnamed"; os (string_of_int del');  os " -- ";gviz_produnnamed_prod_form15 os to_pretty_print (cons) produnnamed_prod_form153; os "ProdUnnamed"; os (string_of_int del'); os "[label=\""; os "ProdUnnamed"; os "\"];\n"; os "ProdUnnamed"; os (string_of_int del');  os " -- "; os "ProdUnnamed"; os (string_of_int del');  os (string_of_int del'); os "_med2;\n";os "ProdUnnamed"; os (string_of_int del');  os (string_of_int del'); os "_med2[label=\"";  os "."; os "\"];\n";  () 

and gviz_rule (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |Rule (d , term1 , pd2 , term3) -> let del' = !del in incr del; let _ = del' in os "Rule"; os (string_of_int del');  os ";\n"; os "Rule"; os (string_of_int del'); os "[label=\""; os "Rule"; os "\"];\n"; os "Rule"; os (string_of_int del');  os " -- ";gviz_term os to_pretty_print (cons) term1; os "Rule"; os (string_of_int del'); os "[label=\""; os "Rule"; os "\"];\n"; os "Rule"; os (string_of_int del');  os " -- "; os "Rule"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Rule"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "->"; os "\"];\n"; os "Rule"; os (string_of_int del'); os "[label=\""; os "Rule"; os "\"];\n"; os "Rule"; os (string_of_int del');  os " -- ";gviz_term os to_pretty_print (cons) term3;  () 

and gviz_term (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   |App (d , str1 , pd2 , args3 , pd4) -> let del' = !del in incr del; let _ = del' in os "App"; os (string_of_int del');  os ";\n"; os "App"; os (string_of_int del'); os "[label=\""; os "App"; os "\"];\n"; os "App"; os (string_of_int del');  os " -- "; os "App"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "App"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n"; os "App"; os (string_of_int del'); os "[label=\""; os "App"; os "\"];\n"; os "App"; os (string_of_int del');  os " -- "; os "App"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "App"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  os "("; os "\"];\n"; os "App"; os (string_of_int del'); os "[label=\""; os "App"; os "\"];\n"; os "App"; os (string_of_int del');  os " -- ";gviz_args os to_pretty_print (cons) args3; os "App"; os (string_of_int del'); os "[label=\""; os "App"; os "\"];\n"; os "App"; os (string_of_int del');  os " -- "; os "App"; os (string_of_int del');  os (string_of_int del'); os "_med2;\n";os "App"; os (string_of_int del');  os (string_of_int del'); os "_med2[label=\"";  os ")"; os "\"];\n";  () 
   |Sym (d , str1) -> let del' = !del in incr del; let _ = del' in os "Sym"; os (string_of_int del');  os ";\n"; os "Sym"; os (string_of_int del'); os "[label=\""; os "Sym"; os "\"];\n"; os "Sym"; os (string_of_int del');  os " -- "; os "Sym"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Sym"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n";  () 

and gviz_produnnamed_prod_form15 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option31"; os (string_of_int del');  os ";\n"; os "Option31"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(form1)) -> let del' = !del in incr del; let _ = del' in os "Option30"; os (string_of_int del');  os ";\n"; os "Option30"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option30"; os (string_of_int del');  os " -- ";gviz_form os to_pretty_print (cons) form1;  () 

and gviz_prod_prod_form14 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option29"; os (string_of_int del');  os ";\n"; os "Option29"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(form1)) -> let del' = !del in incr del; let _ = del' in os "Option28"; os (string_of_int del');  os ";\n"; os "Option28"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option28"; os (string_of_int del');  os " -- ";gviz_form os to_pretty_print (cons) form1;  () 

and gviz_lex_lex_form13 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option27"; os (string_of_int del');  os ";\n"; os "Option27"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(form1)) -> let del' = !del in incr del; let _ = del' in os "Option26"; os (string_of_int del');  os ";\n"; os "Option26"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option26"; os (string_of_int del');  os " -- ";gviz_form os to_pretty_print (cons) form1;  () 

and gviz_grammar_grammar_rules11 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option25"; os (string_of_int del');  os ";\n"; os "Option25"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(pd1 , grammar_grammar_rule122)) -> let del' = !del in incr del; let _ = del' in os "Option24"; os (string_of_int del');  os ";\n"; os "Option24"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option24"; os (string_of_int del');  os " -- "; os "Option24"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Option24"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "Rules"; os "\"];\n"; os "Option24"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option24"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_rule12 os to_pretty_print ("Option24"^(string_of_int del')) grammar_grammar_rule122;  () 

and gviz_grammar_grammar_rule12 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,[]) -> let del' = !del in incr del; let _ = del' in os cons;  os (string_of_int del'); os "_med0;\n"; os cons;  os (string_of_int del'); os "_med0[label=\"[]\"];\n";  () 
   | (d , (rule1)::grammar_grammar_rule122) -> let del' = !del in incr del; let _ = del' in gviz_rule os to_pretty_print (cons) rule1; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- ";gviz_grammar_grammar_rule12 os to_pretty_print (cons)  (d,grammar_grammar_rule122) ;  () 

and gviz_grammar_grammar_vars9 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option21"; os (string_of_int del');  os ";\n"; os "Option21"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(pd1 , grammar_grammar_id102)) -> let del' = !del in incr del; let _ = del' in os "Option20"; os (string_of_int del');  os ";\n"; os "Option20"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option20"; os (string_of_int del');  os " -- "; os "Option20"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Option20"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "Vars"; os "\"];\n"; os "Option20"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option20"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_id10 os to_pretty_print ("Option20"^(string_of_int del')) grammar_grammar_id102;  () 

and gviz_grammar_grammar_id10 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,[]) -> let del' = !del in incr del; let _ = del' in os cons;  os (string_of_int del'); os "_med0;\n"; os cons;  os (string_of_int del'); os "_med0[label=\"[]\"];\n";  () 
   | (d , (str1)::grammar_grammar_id102) -> let del' = !del in incr del; let _ = del' in  os ";\n"; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- "; os cons;  os (string_of_int del'); os "_med0;\n";os cons;  os (string_of_int del'); os "_med0[label=\"";  gviz_terminal os to_pretty_print (cons) str1; os "\"];\n"; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- ";gviz_grammar_grammar_id10 os to_pretty_print (cons)  (d,grammar_grammar_id102) ;  () 

and gviz_grammar_grammar_lexical7 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option17"; os (string_of_int del');  os ";\n"; os "Option17"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(pd1 , grammar_grammar_lex82)) -> let del' = !del in incr del; let _ = del' in os "Option16"; os (string_of_int del');  os ";\n"; os "Option16"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option16"; os (string_of_int del');  os " -- "; os "Option16"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Option16"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "Lexical"; os "\"];\n"; os "Option16"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option16"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_lex8 os to_pretty_print ("Option16"^(string_of_int del')) grammar_grammar_lex82;  () 

and gviz_grammar_grammar_lex8 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,[]) -> let del' = !del in incr del; let _ = del' in os cons;  os (string_of_int del'); os "_med0;\n"; os cons;  os (string_of_int del'); os "_med0[label=\"[]\"];\n";  () 
   | (d , (lex1)::grammar_grammar_lex82) -> let del' = !del in incr del; let _ = del' in gviz_lex os to_pretty_print (cons) lex1; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- ";gviz_grammar_grammar_lex8 os to_pretty_print (cons)  (d,grammar_grammar_lex82) ;  () 

and gviz_grammar_grammar_syntactic5 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option13"; os (string_of_int del');  os ";\n"; os "Option13"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(pd1 , grammar_grammar_prod62)) -> let del' = !del in incr del; let _ = del' in os "Option12"; os (string_of_int del');  os ";\n"; os "Option12"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option12"; os (string_of_int del');  os " -- "; os "Option12"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Option12"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "Syntactic"; os "\"];\n"; os "Option12"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option12"; os (string_of_int del');  os " -- ";gviz_grammar_grammar_prod6 os to_pretty_print ("Option12"^(string_of_int del')) grammar_grammar_prod62;  () 

and gviz_grammar_grammar_prod6 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,[]) -> let del' = !del in incr del; let _ = del' in os cons;  os (string_of_int del'); os "_med0;\n"; os cons;  os (string_of_int del'); os "_med0[label=\"[]\"];\n";  () 
   | (d , (prod1)::grammar_grammar_prod62) -> let del' = !del in incr del; let _ = del' in gviz_prod os to_pretty_print (cons) prod1; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- ";gviz_grammar_grammar_prod6 os to_pretty_print (cons)  (d,grammar_grammar_prod62) ;  () 

and gviz_grammar_grammar_whitespace4 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option9"; os (string_of_int del');  os ";\n"; os "Option9"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(pd1 , str2)) -> let del' = !del in incr del; let _ = del' in os "Option8"; os (string_of_int del');  os ";\n"; os "Option8"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option8"; os (string_of_int del');  os " -- "; os "Option8"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Option8"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "Whitespace"; os "\"];\n"; os "Option8"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option8"; os (string_of_int del');  os " -- "; os "Option8"; os (string_of_int del');  os (string_of_int del'); os "_med1;\n";os "Option8"; os (string_of_int del');  os (string_of_int del'); os "_med1[label=\"";  gviz_terminal os to_pretty_print (cons) str2; os "\"];\n";  () 

and gviz_seq_forma_atom3 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,[]) -> let del' = !del in incr del; let _ = del' in os cons;  os (string_of_int del'); os "_med0;\n"; os cons;  os (string_of_int del'); os "_med0[label=\"[]\"];\n";  () 
   | (d , (atom1)::seq_forma_atom32) -> let del' = !del in incr del; let _ = del' in gviz_atom os to_pretty_print (cons) atom1; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- ";gviz_seq_forma_atom3 os to_pretty_print (cons)  (d,seq_forma_atom32) ;  () 

and gviz_charset_atom_charset_prim2 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,[]) -> let del' = !del in incr del; let _ = del' in os cons;  os (string_of_int del'); os "_med0;\n"; os cons;  os (string_of_int del'); os "_med0[label=\"[]\"];\n";  () 
   | (d , (charset_prim1)::charset_atom_charset_prim22) -> let del' = !del in incr del; let _ = del' in gviz_charset_prim os to_pretty_print (cons) charset_prim1; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- ";gviz_charset_atom_charset_prim2 os to_pretty_print (cons)  (d,charset_atom_charset_prim22) ;  () 

and gviz_charset_atom_tilde1 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,None) -> let del' = !del in incr del; let _ = del' in os "Option3"; os (string_of_int del');  os ";\n"; os "Option3"; os (string_of_int del');  os "[label=\"None\"];\n";  () 
   | (d , Some(pd1)) -> let del' = !del in incr del; let _ = del' in os "Option2"; os (string_of_int del');  os ";\n"; os "Option2"; os (string_of_int del'); os "[label=\""; os "Option"; os "\"];\n"; os "Option2"; os (string_of_int del');  os " -- "; os "Option2"; os (string_of_int del');  os (string_of_int del'); os "_med0;\n";os "Option2"; os (string_of_int del');  os (string_of_int del'); os "_med0[label=\"";  os "~"; os "\"];\n";  () 

and gviz_args_args_comma0 (os:string->unit) (to_pretty_print:bool) (cons:string) = function 
   | (d,[]) -> let del' = !del in incr del; let _ = del' in os cons;  os (string_of_int del'); os "_med0;\n"; os cons;  os (string_of_int del'); os "_med0[label=\"[]\"];\n";  () 
   | (d , (pd1 , term2)::args_args_comma03) -> let del' = !del in incr del; let _ = del' in  os ";\n"; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- "; os cons;  os (string_of_int del'); os "_med0;\n";os cons;  os (string_of_int del'); os "_med0[label=\"";  os ","; os "\"];\n"; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- ";gviz_term os to_pretty_print (cons) term2; os cons; os "[label=\""; os cons; os "\"];\n"; os cons;  os " -- ";gviz_args_args_comma0 os to_pretty_print (cons)  (d,args_args_comma03) ;  () ;;

let gviz (os:string->unit) (to_pretty_print:bool) (cons:string) e = os "graph hopeful { \nnode [shape=\"plaintext\"];\n"; gviz_grammar os to_pretty_print cons e; os "}";;