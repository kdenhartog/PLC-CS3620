(* auto-generated by gt *)

open Gra2srs_syntax;;

let cur_line = ref 1;;
let rec print_new_line (os:string->unit) (do_print:bool) (p:int) : unit =
	if(p > !cur_line && do_print) then ( 
		os "\n"; 
		incr cur_line;
		print_new_line os do_print p;
	)
;;

let rec dummy () = () 
and pp_terminal (os:string->unit) (to_pretty_print:bool) = function 
	(d,str1) -> print_new_line os to_pretty_print (fst d); os str1

and ppast_args (os:string->unit) (to_pretty_print:bool) = function 
   |Empty (d) ->  os "Empty"; os "("; () 
   |Args (d , term1 , args_args_comma02) ->  os "Args"; os "(";ppast_term os to_pretty_print term1; os "";os ","; ppast_args_args_comma0 os to_pretty_print args_args_comma02; os "";os ")";  () 

and ppast_atom (os:string->unit) (to_pretty_print:bool) = function 
   |Id (d , prim1 , post2) ->  os "Id"; os "(";ppast_prim os to_pretty_print prim1; os "";os ","; ppast_post os to_pretty_print post2; os "";os ")";  () 
   |Charset (d , charset_atom_tilde11 , pd2 , charset_atom_charset_prim23 , pd4 , post5) ->  os "Charset"; os "(";ppast_charset_atom_tilde1 os to_pretty_print charset_atom_tilde11; os "";os ","; print_new_line os to_pretty_print (fst pd2); os "LS("; os "\""; os "["; os "\")"; os "";os ","; ppast_charset_atom_charset_prim2 os to_pretty_print charset_atom_charset_prim23; os "";os ","; print_new_line os to_pretty_print (fst pd4); os "RS("; os "\""; os "]"; os "\")"; os "";os ","; ppast_post os to_pretty_print post5; os "";os ")";  () 
   |Marker (d , pd1) ->  os "Marker"; os "(";print_new_line os to_pretty_print (fst pd1); os "BANG("; os "\""; os "!"; os "\")"; os "";os ")";  () 
   |Paren (d , pd1 , form2 , pd3 , post4) ->  os "Paren"; os "(";print_new_line os to_pretty_print (fst pd1); os "LP("; os "\""; os "("; os "\")"; os "";os ","; ppast_form os to_pretty_print form2; os "";os ","; print_new_line os to_pretty_print (fst pd3); os "RP("; os "\""; os ")"; os "\")"; os "";os ","; ppast_post os to_pretty_print post4; os "";os ")";  () 

and ppast_charset_prim (os:string->unit) (to_pretty_print:bool) = function 
   |Range (d , str1 , pd2 , str3) ->  os "Range"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ","; print_new_line os to_pretty_print (fst pd2); os "MINUS("; os "\""; os "-"; os "\")"; os "";os ",";  print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str3; os "";os ")";  () 
   |Char (d , str1) ->  os "Char"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ")";  () 

and ppast_form (os:string->unit) (to_pretty_print:bool) = function 
   |Bar (d , forma1 , pd2 , form3) ->  os "Bar"; os "(";ppast_forma os to_pretty_print forma1; os "";os ","; print_new_line os to_pretty_print (fst pd2); os "BAR("; os "\""; os "|"; os "\")"; os "";os ","; ppast_form os to_pretty_print form3; os "";os ")";  () 
   |Forma (d , forma1) ->  os "Forma"; os "(";ppast_forma os to_pretty_print forma1; os "";os ")";  () 

and ppast_forma (os:string->unit) (to_pretty_print:bool) = function 
   |Seq (d , seq_forma_atom31) ->  os "Seq"; os "(";ppast_seq_forma_atom3 os to_pretty_print seq_forma_atom31; os "";os ")";  () 

and ppast_grammar (os:string->unit) (to_pretty_print:bool) = function 
   |Grammar (d , str1 , pd2 , str3 , grammar_grammar_whitespace44 , grammar_grammar_syntactic55 , grammar_grammar_lexical76 , grammar_grammar_vars97 , grammar_grammar_rules118) ->  os "Grammar"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ","; print_new_line os to_pretty_print (fst pd2); os "START("; os "\""; os "Start"; os "\")"; os "";os ",";  print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str3; os "";os ","; ppast_grammar_grammar_whitespace4 os to_pretty_print grammar_grammar_whitespace44; os "";os ","; ppast_grammar_grammar_syntactic5 os to_pretty_print grammar_grammar_syntactic55; os "";os ","; ppast_grammar_grammar_lexical7 os to_pretty_print grammar_grammar_lexical76; os "";os ","; ppast_grammar_grammar_vars9 os to_pretty_print grammar_grammar_vars97; os "";os ","; ppast_grammar_grammar_rules11 os to_pretty_print grammar_grammar_rules118; os "";os ")";  () 

and ppast_lex (os:string->unit) (to_pretty_print:bool) = function 
   |Lex (d , str1 , lex_op2 , lex_lex_form133 , pd4) ->  os "Lex"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ","; ppast_lex_op os to_pretty_print lex_op2; os "";os ","; ppast_lex_lex_form13 os to_pretty_print lex_lex_form133; os "";os ","; print_new_line os to_pretty_print (fst pd4); os "DOT("; os "\""; os "."; os "\")"; os "";os ")";  () 

and ppast_lex_op (os:string->unit) (to_pretty_print:bool) = function 
   |LexArrow (d , pd1) ->  os "LexArrow"; os "(";print_new_line os to_pretty_print (fst pd1); os "ARROW("; os "\""; os "->"; os "\")"; os "";os ")";  () 
   |LexThickArrow (d , pd1) ->  os "LexThickArrow"; os "(";print_new_line os to_pretty_print (fst pd1); os "THICKARROW("; os "\""; os "=>"; os "\")"; os "";os ")";  () 

and ppast_post (os:string->unit) (to_pretty_print:bool) = function 
   |Star (d , pd1) ->  os "Star"; os "(";print_new_line os to_pretty_print (fst pd1); os "STAR("; os "\""; os "*"; os "\")"; os "";os ")";  () 
   |Plus (d , pd1) ->  os "Plus"; os "(";print_new_line os to_pretty_print (fst pd1); os "PLUS("; os "\""; os "+"; os "\")"; os "";os ")";  () 
   |Qmark (d , pd1) ->  os "Qmark"; os "(";print_new_line os to_pretty_print (fst pd1); os "QMARK("; os "\""; os "?"; os "\")"; os "";os ")";  () 
   |Plain (d) ->  os "Plain"; os "("; () 

and ppast_prim (os:string->unit) (to_pretty_print:bool) = function 
   |PrimId (d , str1) ->  os "PrimId"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ")";  () 
   |PrimStringLit (d , str1) ->  os "PrimStringLit"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ")";  () 

and ppast_prod (os:string->unit) (to_pretty_print:bool) = function 
   |Prod (d , str1 , pd2 , str3 , pd4 , prod_prod_form145 , pd6) ->  os "Prod"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ","; print_new_line os to_pretty_print (fst pd2); os "COLON("; os "\""; os ":"; os "\")"; os "";os ",";  print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str3; os "";os ","; print_new_line os to_pretty_print (fst pd4); os "ARROW("; os "\""; os "->"; os "\")"; os "";os ","; ppast_prod_prod_form14 os to_pretty_print prod_prod_form145; os "";os ","; print_new_line os to_pretty_print (fst pd6); os "DOT("; os "\""; os "."; os "\")"; os "";os ")";  () 
   |ProdUnnamed (d , str1 , pd2 , produnnamed_prod_form153 , pd4) ->  os "ProdUnnamed"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ","; print_new_line os to_pretty_print (fst pd2); os "ARROW("; os "\""; os "->"; os "\")"; os "";os ","; ppast_produnnamed_prod_form15 os to_pretty_print produnnamed_prod_form153; os "";os ","; print_new_line os to_pretty_print (fst pd4); os "DOT("; os "\""; os "."; os "\")"; os "";os ")";  () 

and ppast_rule (os:string->unit) (to_pretty_print:bool) = function 
   |Rule (d , term1 , pd2 , term3) ->  os "Rule"; os "(";ppast_term os to_pretty_print term1; os "";os ","; print_new_line os to_pretty_print (fst pd2); os "ARROW("; os "\""; os "->"; os "\")"; os "";os ","; ppast_term os to_pretty_print term3; os "";os ")";  () 

and ppast_term (os:string->unit) (to_pretty_print:bool) = function 
   |App (d , str1 , pd2 , args3 , pd4) ->  os "App"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ","; print_new_line os to_pretty_print (fst pd2); os "LP("; os "\""; os "("; os "\")"; os "";os ","; ppast_args os to_pretty_print args3; os "";os ","; print_new_line os to_pretty_print (fst pd4); os "RP("; os "\""; os ")"; os "\")"; os "";os ")";  () 
   |Sym (d , str1) ->  os "Sym"; os "("; print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ")";  () 

and ppast_produnnamed_prod_form15 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(form1)) ->  os "Some("; ppast_form os to_pretty_print form1; os "";os ")";  () 

and ppast_prod_prod_form14 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(form1)) ->  os "Some("; ppast_form os to_pretty_print form1; os "";os ")";  () 

and ppast_lex_lex_form13 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(form1)) ->  os "Some("; ppast_form os to_pretty_print form1; os "";os ")";  () 

and ppast_grammar_grammar_rules11 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(pd1 , grammar_grammar_rule122)) ->  os "Some("; print_new_line os to_pretty_print (fst pd1); os "RULES("; os "\""; os "Rules"; os "\")"; os "";os ","; ppast_grammar_grammar_rule12 os to_pretty_print grammar_grammar_rule122; os "";os ")";  () 

and ppast_grammar_grammar_rule12 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,[]) ->  os "[";  os "]";  () 
   | (d , (rule1)::grammar_grammar_rule122) ->  os "["; ppast_rule os to_pretty_print rule1; os "";os ";"; ppast_grammar_grammar_rule12 os to_pretty_print (d,grammar_grammar_rule122); os ""; os "]"; os ")";  () 

and ppast_grammar_grammar_vars9 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(pd1 , grammar_grammar_id102)) ->  os "Some("; print_new_line os to_pretty_print (fst pd1); os "VARS("; os "\""; os "Vars"; os "\")"; os "";os ","; ppast_grammar_grammar_id10 os to_pretty_print grammar_grammar_id102; os "";os ")";  () 

and ppast_grammar_grammar_id10 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,[]) ->  os "[";  os "]";  () 
   | (d , (str1)::grammar_grammar_id102) ->  os "[";  print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str1; os "";os ";"; ppast_grammar_grammar_id10 os to_pretty_print (d,grammar_grammar_id102); os ""; os "]"; os ")";  () 

and ppast_grammar_grammar_lexical7 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(pd1 , grammar_grammar_lex82)) ->  os "Some("; print_new_line os to_pretty_print (fst pd1); os "LEXICAL("; os "\""; os "Lexical"; os "\")"; os "";os ","; ppast_grammar_grammar_lex8 os to_pretty_print grammar_grammar_lex82; os "";os ")";  () 

and ppast_grammar_grammar_lex8 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,[]) ->  os "[";  os "]";  () 
   | (d , (lex1)::grammar_grammar_lex82) ->  os "["; ppast_lex os to_pretty_print lex1; os "";os ";"; ppast_grammar_grammar_lex8 os to_pretty_print (d,grammar_grammar_lex82); os ""; os "]"; os ")";  () 

and ppast_grammar_grammar_syntactic5 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(pd1 , grammar_grammar_prod62)) ->  os "Some("; print_new_line os to_pretty_print (fst pd1); os "SYNTACTIC("; os "\""; os "Syntactic"; os "\")"; os "";os ","; ppast_grammar_grammar_prod6 os to_pretty_print grammar_grammar_prod62; os "";os ")";  () 

and ppast_grammar_grammar_prod6 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,[]) ->  os "[";  os "]";  () 
   | (d , (prod1)::grammar_grammar_prod62) ->  os "["; ppast_prod os to_pretty_print prod1; os "";os ";"; ppast_grammar_grammar_prod6 os to_pretty_print (d,grammar_grammar_prod62); os ""; os "]"; os ")";  () 

and ppast_grammar_grammar_whitespace4 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(pd1 , str2)) ->  os "Some("; print_new_line os to_pretty_print (fst pd1); os "WHITESPACE("; os "\""; os "Whitespace"; os "\")"; os "";os ",";  print_new_line os to_pretty_print (fst d);  pp_terminal os to_pretty_print str2; os "";os ")";  () 

and ppast_seq_forma_atom3 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,[]) ->  os "[";  os "]"; os ")";  () 
   | (d , (atom1)::seq_forma_atom32) ->  os "["; ppast_atom os to_pretty_print atom1; os "";os ";"; ppast_seq_forma_atom3 os to_pretty_print (d,seq_forma_atom32); os ""; os "]"; os ")";  () 

and ppast_charset_atom_charset_prim2 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,[]) ->  os "[";  os "]";  () 
   | (d , (charset_prim1)::charset_atom_charset_prim22) ->  os "["; ppast_charset_prim os to_pretty_print charset_prim1; os "";os ";"; ppast_charset_atom_charset_prim2 os to_pretty_print (d,charset_atom_charset_prim22); os ""; os "]"; os ")";  () 

and ppast_charset_atom_tilde1 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,None) ->  os "None";  () 
   | (d , Some(pd1)) ->  os "Some("; print_new_line os to_pretty_print (fst pd1); os "TILDE("; os "\""; os "~"; os "\")"; os "";os ")";  () 

and ppast_args_args_comma0 (os:string->unit) (to_pretty_print:bool) = function 
   | (d,[]) ->  os "[";  os "]";  () 
   | (d , (pd1 , term2)::args_args_comma03) ->  os "["; print_new_line os to_pretty_print (fst pd1); os "COMMA("; os "\""; os ","; os "\")"; os "";os ";"; ppast_term os to_pretty_print term2; os "";os ";"; ppast_args_args_comma0 os to_pretty_print (d,args_args_comma03); os ""; os "]"; os ")";  () ;;

let ppast (os:string->unit) (to_pretty_print:bool) e = ppast_grammar os to_pretty_print e;;